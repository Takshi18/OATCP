#include <bits/stdc++.h>
using namespace std;

vector<string> genSubs(const string &s, string cur, int idx, int len) {
    vector<string> res;

    if (len == 0) {
        res.push_back(cur);
        return res;
    }

    if (idx == s.length()) {
        return res;
    }

    vector<string> withCur = genSubs(s, cur + s[idx], idx + 1, len - 1);
    res.insert(res.end(), withCur.begin(), withCur.end());

    vector<string> withoutCur = genSubs(s, cur, idx + 1, len);
    res.insert(res.end(), withoutCur.begin(), withoutCur.end());

    return res;
}

int main() {
    int n;
    cin >> n;
    vector<vector<string>> vs;

    for (int i = 0; i < n; i++) {
        string str;
        cin >> str;

        vector<string> ans;
        set<string> st;

        for (int len = 1; len <= 4; ++len) {
            vector<string> subs = genSubs(str, "", 0, len);
            for (int j = 0; j < subs.size(); j++) {
                if (st.find(subs[j]) == st.end()) {
                    ans.push_back(subs[j]);
                    st.insert(subs[j]);
                }
            }
        }
        vs.push_back(ans);
    }

    for (int l = 0; l < vs.size(); l++) {
        for (int j = 0; j < vs[l].size(); j++) {
            cout << vs[l][j] << endl;
        }
    }

    return 0;
}
